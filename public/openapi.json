{
  "openapi": "3.1.0",
  "info": {
    "title": "Scaciut API",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication related endpoints"
    }
  ],
  "paths": {
    "/api/auth/get-session": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user session",
        "description": "Retrieve the current user session based on the provided token.",
        "responses": {
          "200": {
            "description": "Session retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "const": 200
                    },
                    "message": {
                      "type": "string",
                      "const": "Get session successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "cuid2",
                          "pattern": "^[0-9a-z]+$"
                        },
                        "name": {
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 100
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                        },
                        "createdAt": {
                          "type": "string"
                        }
                      },
                      "required": ["id", "name", "email", "createdAt"],
                      "additionalProperties": false
                    }
                  },
                  "required": ["status", "message", "data"],
                  "additionalProperties": false
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "const": 401
                    },
                    "message": {
                      "type": "string",
                      "const": "Get session failed"
                    },
                    "details": {
                      "type": "string"
                    }
                  },
                  "required": ["status", "message", "details"],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/sign-up": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "description": "Create a new user account with the provided details.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  },
                  "password": {
                    "type": "string",
                    "pattern": "^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_\\-+=[\\]{};':\"\\\\|,.<>/?]).{8,}$"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 100
                  }
                },
                "required": ["email", "password", "name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "const": 201
                    },
                    "message": {
                      "type": "string",
                      "const": "Sign up successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "string",
                          "format": "cuid2",
                          "pattern": "^[0-9a-z]+$"
                        }
                      },
                      "required": ["userId"],
                      "additionalProperties": false
                    }
                  },
                  "required": ["status", "message", "data"],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation errors or email already in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "const": 400
                    },
                    "message": {
                      "type": "string",
                      "const": "Sign up failed"
                    },
                    "details": {
                      "type": "string"
                    }
                  },
                  "required": ["status", "message", "details"],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/sign-in": {
      "post": {
        "tags": ["Auth"],
        "summary": "Authenticate a user",
        "description": "Authenticate a user and return a JWT token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  },
                  "password": {
                    "type": "string",
                    "pattern": "^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_\\-+=[\\]{};':\"\\\\|,.<>/?]).{8,}$"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User authenticated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "const": 200
                    },
                    "message": {
                      "type": "string",
                      "const": "Sign in successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "string",
                          "format": "cuid2",
                          "pattern": "^[0-9a-z]+$"
                        },
                        "token": {
                          "type": "string",
                          "pattern": "^ey.*"
                        }
                      },
                      "required": ["userId", "token"],
                      "additionalProperties": false
                    }
                  },
                  "required": ["status", "message", "data"],
                  "additionalProperties": false
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Validation errors or invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "const": 400
                    },
                    "message": {
                      "type": "string",
                      "const": "Sign in failed"
                    },
                    "details": {
                      "type": "string"
                    }
                  },
                  "required": ["status", "message", "details"],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/sign-out": {
      "post": {
        "tags": ["Auth"],
        "summary": "Sign out the current user",
        "description": "Invalidate the current user session.",
        "responses": {
          "200": {
            "description": "User signed out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "const": 200
                    },
                    "message": {
                      "type": "string",
                      "const": "Sign out successfully"
                    }
                  },
                  "required": ["status", "message"],
                  "additionalProperties": false
                }
              }
            }
          }
        }
      }
    }
  }
}
